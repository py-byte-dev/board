version: '3.9'

services:
  pg:
    image: postgres:alpine
    env_file: '.env'
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  redis:
    image: redis:alpine
    volumes:
      - ./cache:/data
    networks:
      - backend
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  minio:
    container_name: s3
    image: minio/minio:latest
    command: [ "server", "--console-address", ":9001", "/data" ]
    env_file: '.env'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-storage:/data
    networks:
      - backend
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  webserver:
    container_name: webserver
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    read_only: true
    tmpfs:
      - /tmp
    depends_on:
      - bot
      - api
      - minio
    networks:
      - backend
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  certbot:
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1; done'"
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - backend
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  bot:
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    container_name: bot
    env_file: ".env"
    depends_on:
      - pg
      - redis
    networks:
      - backend
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

  api:
    build:
      context: .
      dockerfile: ./docker/api.Dockerfile
    container_name: api
    env_file: ".env"
    depends_on:
      - pg
      - redis
    networks:
      - backend
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
      - seccomp=default
      - apparmor=docker-default

volumes:
  pg_data:
  minio-storage:

networks:
  backend:
    driver: bridge
